// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace WebApp.Domain.Migrations
{
    [DbContext(typeof(BumboDbContext))]
    partial class BumboDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Database.Division", b =>
                {
                    b.Property<string>("DivisionName")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DivisionName");

                    b.ToTable("Divisions");

                    b.HasData(
                        new
                        {
                            DivisionName = "Verkoop"
                        },
                        new
                        {
                            DivisionName = "Magazijn"
                        });
                });

            modelBuilder.Entity("Database.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("Date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Insertion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NFCToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Birthdate = new DateTime(2000, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tester1@mail.com",
                            FirstName = "testUser1FirstName",
                            Insertion = "",
                            LastName = "testUser1LastName",
                            NFCToken = "Token1"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Birthdate = new DateTime(1999, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tester2@mail.com",
                            FirstName = "testUser2FirstName",
                            Insertion = "",
                            LastName = "testUser2LastName",
                            NFCToken = "Token2"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Birthdate = new DateTime(1985, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tester3@mail.com",
                            FirstName = "testUser3FirstName",
                            Insertion = "",
                            LastName = "testUser3LastName",
                            NFCToken = "Token3"
                        });
                });

            modelBuilder.Entity("Database.Prognosis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TotalColli")
                        .HasColumnType("int");

                    b.Property<int?>("TotalCustomers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionName");

                    b.ToTable("Prognosis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2020, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivisionName = "Verkoop",
                            TotalColli = 3,
                            TotalCustomers = 10
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2020, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DivisionName = "Magazijn",
                            TotalColli = 10,
                            TotalCustomers = 15
                        });
                });

            modelBuilder.Entity("Database.ScheduledService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DivisionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ScheduledServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DivisionName = "Magazijn",
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 11, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 24, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            DivisionName = "Verkoop",
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            DivisionName = "Verkoop",
                            EmployeeId = 2,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            DivisionName = "Magazijn",
                            EmployeeId = 3,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Database.SchoolMoment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("TotalHour")
                        .HasColumnType("int");

                    b.Property<DateTime?>("date")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Schoolmoments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            TotalHour = 20,
                            date = new DateTime(2022, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 1,
                            TotalHour = 20,
                            date = new DateTime(2022, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 2,
                            TotalHour = 20,
                            date = new DateTime(2022, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 3,
                            TotalHour = 20,
                            date = new DateTime(2022, 11, 21, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Database.WorkedService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApprovalMoment")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkedServices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovalMoment = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            ApprovalMoment = new DateTime(2022, 11, 24, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 11, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            ApprovalMoment = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 2,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            ApprovalMoment = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            EmployeeId = 3,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebApp.Domain.Availability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Availabilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 11, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 24, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EmployeeId = 2,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EmployeeId = 3,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Database.Prognosis", b =>
                {
                    b.HasOne("Database.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("Database.ScheduledService", b =>
                {
                    b.HasOne("Database.Employee", "Employee_Id")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee_Id");
                });

            modelBuilder.Entity("Database.SchoolMoment", b =>
                {
                    b.HasOne("Database.Employee", "Employee_Id")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee_Id");
                });

            modelBuilder.Entity("Database.WorkedService", b =>
                {
                    b.HasOne("Database.Employee", "Employee_Id")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee_Id");
                });

            modelBuilder.Entity("WebApp.Domain.Availability", b =>
                {
                    b.HasOne("Database.Employee", "Employee_Id")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
