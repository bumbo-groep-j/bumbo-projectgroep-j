// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp.Domain;

#nullable disable

namespace WebApp.Domain.Migrations
{
    [DbContext(typeof(BumboDbContext))]
    partial class BumboDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApp.Domain.Availability", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Weekday")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId", "Weekday", "Id");

                    b.ToTable("Availabilities");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Weekday = 0,
                            Id = 1,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 1,
                            Weekday = 3,
                            Id = 2,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2022, 11, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 24, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 2,
                            Weekday = 1,
                            Id = 3,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 3,
                            Weekday = 1,
                            Id = 4,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebApp.Domain.Department", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Name = "Kassa"
                        },
                        new
                        {
                            Name = "Vers"
                        },
                        new
                        {
                            Name = "VKK"
                        });
                });

            modelBuilder.Entity("WebApp.Domain.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("Date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HourlyWage")
                        .HasColumnType("float");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NFCToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(2000, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "testUser1FirstName",
                            HourlyWage = 0.0,
                            LastName = "testUser1LastName",
                            MiddleName = "",
                            NFCToken = "Token1"
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1999, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "testUser2FirstName",
                            HourlyWage = 0.0,
                            LastName = "testUser2LastName",
                            MiddleName = "",
                            NFCToken = "Token2"
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1985, 8, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "testUser3FirstName",
                            HourlyWage = 0.0,
                            LastName = "testUser3LastName",
                            MiddleName = "testUser3MiddelName",
                            NFCToken = "Token3"
                        });
                });

            modelBuilder.Entity("WebApp.Domain.Prognosis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalColli")
                        .HasColumnType("int");

                    b.Property<int>("TotalCustomers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prognosis");
                });

            modelBuilder.Entity("WebApp.Domain.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Schedules");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Department = "Magazijn",
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 11, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 24, 11, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Department = "Verkoop",
                            EmployeeId = 1,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Department = "Verkoop",
                            EmployeeId = 2,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Department = "Magazijn",
                            EmployeeId = 3,
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebApp.Domain.SchoolSchedule", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Weekday")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("EmployeeId", "Weekday", "Id");

                    b.ToTable("SchoolSchedules");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Weekday = 0,
                            Id = 1,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2022, 11, 21, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 21, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 1,
                            Weekday = 2,
                            Id = 2,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 22, 13, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 2,
                            Weekday = 4,
                            Id = 3,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2022, 11, 25, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 25, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            EmployeeId = 3,
                            Weekday = 1,
                            Id = 4,
                            EndDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EndTime = new DateTime(2022, 11, 24, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartTime = new DateTime(2022, 11, 24, 8, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebApp.Domain.WorkedHours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApprovalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApprovedTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ApprovedTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ClockedTimeEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ClockedTimeStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkedHours");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovalTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            ClockedTimeEnd = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            ClockedTimeStart = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Department = "Magazijn",
                            EmployeeId = 1
                        },
                        new
                        {
                            Id = 2,
                            ApprovalTime = new DateTime(2022, 11, 24, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            ClockedTimeEnd = new DateTime(2022, 11, 24, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            ClockedTimeStart = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Department = "Verkoop",
                            EmployeeId = 1
                        },
                        new
                        {
                            Id = 3,
                            ApprovalTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            ClockedTimeEnd = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            ClockedTimeStart = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Department = "Verkoop",
                            EmployeeId = 2
                        },
                        new
                        {
                            Id = 4,
                            ApprovalTime = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            ClockedTimeEnd = new DateTime(2022, 11, 22, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            ClockedTimeStart = new DateTime(2022, 11, 22, 8, 30, 0, 0, DateTimeKind.Unspecified),
                            Department = "Magazijn",
                            EmployeeId = 3
                        });
                });

            modelBuilder.Entity("WebApp.Domain.Availability", b =>
                {
                    b.HasOne("WebApp.Domain.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebApp.Domain.Schedule", b =>
                {
                    b.HasOne("WebApp.Domain.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebApp.Domain.SchoolSchedule", b =>
                {
                    b.HasOne("WebApp.Domain.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("WebApp.Domain.WorkedHours", b =>
                {
                    b.HasOne("WebApp.Domain.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
